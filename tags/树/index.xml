<?xml version="1.0" encoding="utf-8" standalone="yes"?><rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom"><channel><title>树 on Kevin wang's blog</title><link>https://kevinwang930.github.io/tags/%E6%A0%91/</link><description>Recent content in 树 on Kevin wang's blog</description><generator>Hugo -- gohugo.io</generator><language>en-us</language><lastBuildDate>Sun, 25 Feb 2024 23:56:03 +0800</lastBuildDate><atom:link href="https://kevinwang930.github.io/tags/%E6%A0%91/index.xml" rel="self" type="application/rss+xml"/><item><title>数据结构-树</title><link>https://kevinwang930.github.io/post/tree/data-structure-tree/</link><pubDate>Sun, 25 Feb 2024 23:56:03 +0800</pubDate><guid>https://kevinwang930.github.io/post/tree/data-structure-tree/</guid><description>1. Tree 1.1 Binary tree each node has at most 2 child nodes called left node and right node.
1.1.1 Complete Binary Tree definitions:
binary tree every level is completely filled except the last level all nodes in the last level are as far left as possible Complete Binary tree can be stored in array
root node is arr[0] for the ith node parent node arr[(i-1)/2] left child node arr[(2*i)+1] right child node arr[(2*i)+2] title complete binary tree usecase A usecase B usecase C usecase D usecase E usecase F A --&amp;gt; B A --&amp;gt; C B --&amp;gt; D B --&amp;gt; E C --&amp;gt; F 1.</description></item></channel></rss>