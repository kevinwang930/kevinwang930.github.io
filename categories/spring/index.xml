<?xml version="1.0" encoding="utf-8" standalone="yes"?><rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom"><channel><title>Spring on Kevin wang's blog</title><link>https://kevinwang930.github.io/categories/spring/</link><description>Recent content in Spring on Kevin wang's blog</description><generator>Hugo -- gohugo.io</generator><language>en-us</language><lastBuildDate>Tue, 02 Apr 2024 12:25:39 +0800</lastBuildDate><atom:link href="https://kevinwang930.github.io/categories/spring/index.xml" rel="self" type="application/rss+xml"/><item><title>Security</title><link>https://kevinwang930.github.io/post/java/spring/security/</link><pubDate>Tue, 02 Apr 2024 12:25:39 +0800</pubDate><guid>https://kevinwang930.github.io/post/java/spring/security/</guid><description>&lt;p>本文记录spring 安全相关的内容&lt;/p></description></item><item><title>spring aop 架构与实现</title><link>https://kevinwang930.github.io/post/java/spring/aop/</link><pubDate>Mon, 01 Apr 2024 12:44:12 +0800</pubDate><guid>https://kevinwang930.github.io/post/java/spring/aop/</guid><description>&lt;p>本文记录 spring aop 架构与实现&lt;/p></description></item><item><title>spring ioc - bean container</title><link>https://kevinwang930.github.io/post/java/spring/ioc/</link><pubDate>Sun, 31 Mar 2024 12:56:25 +0800</pubDate><guid>https://kevinwang930.github.io/post/java/spring/ioc/</guid><description>&lt;p>本文记录spring bean 容器的架构与实现细节&lt;/p></description></item><item><title>Spring微服务架构与实现</title><link>https://kevinwang930.github.io/post/java/spring/mvc/</link><pubDate>Wed, 27 Mar 2024 14:39:29 +0800</pubDate><guid>https://kevinwang930.github.io/post/java/spring/mvc/</guid><description>&lt;p>本文记录spring微服务架构与实现细节&lt;/p></description></item><item><title>Spring internals</title><link>https://kevinwang930.github.io/post/java/spring-boot/</link><pubDate>Tue, 09 Jan 2024 23:29:20 +0800</pubDate><guid>https://kevinwang930.github.io/post/java/spring-boot/</guid><description>本文记录springBoot 内部实现
1. Environment abstraction Environment Interface is an abstraction in container that models 2 key aspects of application environment.
profile A profile is a named, logical group of bean definitions to be registered with the container only if the given profile is active
properties Properties play an important role in almost all applications and may originate from a variety of sources: properties files, JVM system properties, system environment variables, JNDI, servlet context parameters, ad-hoc Properties objects, Map objects, and so on</description></item></channel></rss>