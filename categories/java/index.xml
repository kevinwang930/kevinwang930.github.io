<?xml version="1.0" encoding="utf-8" standalone="yes"?><rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom"><channel><title>Java on Kevin wang's blog</title><link>https://kevinwang930.github.io/categories/java/</link><description>Recent content in Java on Kevin wang's blog</description><generator>Hugo</generator><language>en-us</language><lastBuildDate>Sun, 11 Aug 2024 15:58:33 +0800</lastBuildDate><atom:link href="https://kevinwang930.github.io/categories/java/index.xml" rel="self" type="application/rss+xml"/><item><title>Java native interface</title><link>https://kevinwang930.github.io/post/java/jvm/jni/</link><pubDate>Sun, 11 Aug 2024 15:58:33 +0800</pubDate><guid>https://kevinwang930.github.io/post/java/jvm/jni/</guid><description>&lt;p>Java native Interface(JNI) is a native programming interface that allows java code that runs inside a Java Virtual Machine(VM) to interoperate with applications and libraries written in other programming languages. such as C, C++ , an assembly.&lt;/p>
&lt;h1 id="jni-header">JNI header&lt;/h1>
&lt;p>&lt;code>javac&lt;/code> can be used to compile java class, use &lt;code>-h&lt;/code> to generate JNI header.&lt;/p>
&lt;pre tabindex="0">&lt;code>&amp;#34;$JAVA_HOME&amp;#34;/bin/javac -h c -d target Simple.java
&lt;/code>&lt;/pre>&lt;p>A example Simple.java&lt;/p>
&lt;pre tabindex="0">&lt;code>package kevin.project.jni;


public class Simple {

 static {
 System.loadLibrary(&amp;#34;simple&amp;#34;);
 }


 static native int plus(int a, int b);


 public static void main(String[] args) {
 System.out.println(&amp;#34;start main&amp;#34;);
 System.out.println(plus(1, 2));
 }
}
&lt;/code>&lt;/pre>&lt;p>Generated Header&lt;/p>
&lt;pre tabindex="0">&lt;code>/* DO NOT EDIT THIS FILE - it is machine generated */
#include &amp;lt;jni.h&amp;gt;
/* Header for class kevin_project_jni_Simple */

#ifndef _Included_kevin_project_jni_Simple
#define _Included_kevin_project_jni_Simple
#ifdef __cplusplus
extern &amp;#34;C&amp;#34; {
#endif
/*
 * Class: kevin_project_jni_Simple
 * Method: plus
 * Signature: (II)I
 */
JNIEXPORT jint JNICALL Java_kevin_project_jni_Simple_plus
 (JNIEnv *, jclass, jint, jint);

#ifdef __cplusplus
}
#endif
#endif
&lt;/code>&lt;/pre>&lt;p>Cpp implementation&lt;/p>
&lt;pre tabindex="0">&lt;code>/* DO NOT EDIT THIS FILE - it is machine generated */
#include &amp;lt;jni.h&amp;gt;
#include &amp;lt;stdio.h&amp;gt;
/* Header for class kevin_project_jni_Simple */
#include &amp;#34;kevin_project_jni_Simple.h&amp;#34;
/*
 * Class: kevin_project_jni_Simple
 * Method: plus
 * Signature: (II)I
 */
JNIEXPORT jint JNICALL Java_kevin_project_jni_Simple_plus
 (JNIEnv *env, jclass obj, jint a, jint b) {
 printf (&amp;#34;inside c code\n&amp;#34;);
 return a + b;
}
&lt;/code>&lt;/pre>&lt;h1 id="jni-shared-library">JNI Shared library&lt;/h1>
&lt;p>native C++ code can be compiled to shared library, and loaded into jvm dynamically.
When compile JNI shared library, JNI headers needs to be included.&lt;/p>
&lt;pre tabindex="0">&lt;code>cc -g -shared -fpic -I${JAVA_HOME}/include -I${JAVA_HOME}/include/darwin c/kevin_project_jni_Simple.c -o lib/libSimple.dylib
&lt;/code>&lt;/pre>&lt;h1 id="load-jni-shared-library">load JNI shared library&lt;/h1>
&lt;p>when start jvm, specify &lt;code>library.path&lt;/code> to the generated shared library&lt;/p>
&lt;pre tabindex="0">&lt;code>&amp;#34;$JAVA_HOME&amp;#34;/bin/java -Djava.library.path=&amp;#34;$LD_LIBRARY_PATH&amp;#34;:./lib -cp target kevin.project.jni.Simple
&lt;/code>&lt;/pre>&lt;h1 id="reference">Reference&lt;/h1>
&lt;p>&lt;a href="https://github.com/mkowsiak/jnicookbook">JNICookbook&lt;/a>&lt;/p></description></item><item><title>JVM Thread internals</title><link>https://kevinwang930.github.io/post/java/jvm/thread/</link><pubDate>Wed, 07 Aug 2024 12:59:29 +0800</pubDate><guid>https://kevinwang930.github.io/post/java/jvm/thread/</guid><description>&lt;p>本文记录jvm线程内部实现&lt;/p></description></item><item><title>Netty架构与实现</title><link>https://kevinwang930.github.io/post/java/netty/</link><pubDate>Fri, 02 Aug 2024 13:54:59 +0800</pubDate><guid>https://kevinwang930.github.io/post/java/netty/</guid><description>&lt;p>本文记录Netty架构与实现&lt;/p></description></item><item><title>Java Stream</title><link>https://kevinwang930.github.io/post/java/stream/</link><pubDate>Sat, 13 Jul 2024 18:02:29 +0800</pubDate><guid>https://kevinwang930.github.io/post/java/stream/</guid><description>&lt;p>java stream 的原理及实现&lt;/p></description></item><item><title>Reactor Project in Java</title><link>https://kevinwang930.github.io/post/java/reactor/</link><pubDate>Wed, 03 Jul 2024 14:50:33 +0800</pubDate><guid>https://kevinwang930.github.io/post/java/reactor/</guid><description>&lt;p>本文介绍Java生态中重量级非阻塞应用库 Project Reactor&lt;/p></description></item><item><title>Nacos</title><link>https://kevinwang930.github.io/post/java/spring/nacos/</link><pubDate>Mon, 10 Jun 2024 17:45:28 +0800</pubDate><guid>https://kevinwang930.github.io/post/java/spring/nacos/</guid><description>&lt;p>本文介绍Nacos&lt;/p></description></item><item><title>Spring</title><link>https://kevinwang930.github.io/post/java/spring/spring/</link><pubDate>Sat, 08 Jun 2024 18:30:11 +0800</pubDate><guid>https://kevinwang930.github.io/post/java/spring/spring/</guid><description>&lt;p>本文介绍spring架构&lt;/p></description></item><item><title>Property</title><link>https://kevinwang930.github.io/post/java/spring/bootstrap/</link><pubDate>Thu, 30 May 2024 18:17:31 +0800</pubDate><guid>https://kevinwang930.github.io/post/java/spring/bootstrap/</guid><description>&lt;p>本文记录spring启动过程&lt;/p></description></item><item><title>Spring Webflux</title><link>https://kevinwang930.github.io/post/java/spring/spring-webflux/</link><pubDate>Wed, 29 May 2024 19:43:22 +0800</pubDate><guid>https://kevinwang930.github.io/post/java/spring/spring-webflux/</guid><description>&lt;p>本文介绍 spring-webflux&lt;/p></description></item><item><title>Spring Cloud Gateway</title><link>https://kevinwang930.github.io/post/java/spring/spring-cloud-gateway/</link><pubDate>Wed, 29 May 2024 18:17:39 +0800</pubDate><guid>https://kevinwang930.github.io/post/java/spring/spring-cloud-gateway/</guid><description>&lt;p>本文介绍 spring cloud gateway的架构与实现&lt;/p></description></item><item><title>Spring Cloud 微服务框架</title><link>https://kevinwang930.github.io/post/java/spring/spring-cloud/</link><pubDate>Tue, 30 Apr 2024 18:03:51 +0800</pubDate><guid>https://kevinwang930.github.io/post/java/spring/spring-cloud/</guid><description/></item><item><title>JVM object internals</title><link>https://kevinwang930.github.io/post/java/jvm/object/</link><pubDate>Mon, 22 Apr 2024 18:11:29 +0800</pubDate><guid>https://kevinwang930.github.io/post/java/jvm/object/</guid><description>&lt;p>本文记录jvm 对象内部实现&lt;/p></description></item><item><title>Mybatis internals</title><link>https://kevinwang930.github.io/post/java/spring/mybatis/</link><pubDate>Mon, 15 Apr 2024 18:45:41 +0800</pubDate><guid>https://kevinwang930.github.io/post/java/spring/mybatis/</guid><description>&lt;p>本文介绍 Mybatis 以及拦截器内部实现&lt;/p></description></item><item><title>spring-Logging</title><link>https://kevinwang930.github.io/post/java/spring/logging/</link><pubDate>Tue, 09 Apr 2024 14:46:28 +0800</pubDate><guid>https://kevinwang930.github.io/post/java/spring/logging/</guid><description>&lt;p>本文记录spring logging 的原理与配置&lt;/p></description></item><item><title>java concurrency - Synchronizer Framework</title><link>https://kevinwang930.github.io/post/java/concurrency/synchronizer-framework/</link><pubDate>Sat, 06 Apr 2024 17:00:29 +0800</pubDate><guid>https://kevinwang930.github.io/post/java/concurrency/synchronizer-framework/</guid><description>&lt;p>本文记录 java AbstractQueuedSynchronizer (AQS) 的设计、实现以及具体应用。&lt;/p></description></item><item><title>java Concurrency - Fork Join Framework</title><link>https://kevinwang930.github.io/post/java/concurrency/fork-join-framework/</link><pubDate>Sat, 06 Apr 2024 13:02:58 +0800</pubDate><guid>https://kevinwang930.github.io/post/java/concurrency/fork-join-framework/</guid><description>&lt;p>本文记录java并发编程- fork join framework 的设计与实现&lt;/p></description></item><item><title>Tomcat- Servlet Container</title><link>https://kevinwang930.github.io/post/java/tomcat/</link><pubDate>Tue, 02 Apr 2024 12:50:11 +0800</pubDate><guid>https://kevinwang930.github.io/post/java/tomcat/</guid><description>&lt;p>本文记录tomcat 架构与实现&lt;/p></description></item><item><title>Security</title><link>https://kevinwang930.github.io/post/java/spring/security/</link><pubDate>Tue, 02 Apr 2024 12:25:39 +0800</pubDate><guid>https://kevinwang930.github.io/post/java/spring/security/</guid><description>&lt;p>本文记录spring 安全相关的内容&lt;/p></description></item><item><title>spring aop 架构与实现</title><link>https://kevinwang930.github.io/post/java/spring/aop/</link><pubDate>Mon, 01 Apr 2024 12:44:12 +0800</pubDate><guid>https://kevinwang930.github.io/post/java/spring/aop/</guid><description>&lt;p>本文记录 spring aop 架构与实现&lt;/p></description></item><item><title>spring ioc - bean container</title><link>https://kevinwang930.github.io/post/java/spring/ioc/</link><pubDate>Sun, 31 Mar 2024 12:56:25 +0800</pubDate><guid>https://kevinwang930.github.io/post/java/spring/ioc/</guid><description>&lt;p>本文记录spring bean 容器的架构与实现细节&lt;/p></description></item><item><title>Spring微服务架构与实现</title><link>https://kevinwang930.github.io/post/java/spring/mvc/</link><pubDate>Wed, 27 Mar 2024 14:39:29 +0800</pubDate><guid>https://kevinwang930.github.io/post/java/spring/mvc/</guid><description>&lt;p>本文记录spring微服务架构与实现细节&lt;/p></description></item><item><title>JVM startup</title><link>https://kevinwang930.github.io/post/java/jvm/startup/</link><pubDate>Wed, 20 Mar 2024 00:46:56 +0800</pubDate><guid>https://kevinwang930.github.io/post/java/jvm/startup/</guid><description>&lt;p>本文记录jvm启动流程&lt;/p></description></item><item><title>Java Concurrency - Task Scheduling</title><link>https://kevinwang930.github.io/post/java/concurrency/scheduling/</link><pubDate>Sun, 25 Feb 2024 01:57:48 +0800</pubDate><guid>https://kevinwang930.github.io/post/java/concurrency/scheduling/</guid><description>&lt;p>本文记录jdk提供的并发编程基础模块 - 线程池与异步执行框架&lt;/p></description></item><item><title>java collections internals</title><link>https://kevinwang930.github.io/post/java/java-collections/</link><pubDate>Sat, 24 Feb 2024 19:16:25 +0800</pubDate><guid>https://kevinwang930.github.io/post/java/java-collections/</guid><description>&lt;p>本文记录java集合的接口与实现&lt;/p></description></item><item><title>Java Nio</title><link>https://kevinwang930.github.io/post/java/java-nio/</link><pubDate>Sat, 24 Feb 2024 16:11:41 +0800</pubDate><guid>https://kevinwang930.github.io/post/java/java-nio/</guid><description>&lt;p>本文记录java Nio的接口与实现&lt;/p></description></item><item><title>Spring internals</title><link>https://kevinwang930.github.io/post/java/spring/spring-boot/</link><pubDate>Tue, 09 Jan 2024 23:29:20 +0800</pubDate><guid>https://kevinwang930.github.io/post/java/spring/spring-boot/</guid><description>&lt;p>本文介绍springBoot架构与实现&lt;/p></description></item></channel></rss>